/**
  Responsive Breakpoints
  ---------------------------------------------------------------------- */
$breakpoints: (
  'phone':        400px,
  'phone-wide':   480px,
  'phablet':      560px,
  'tablet-small': 640px,
  'tablet':       768px,
  'tablet-wide':  1024px,
  'desktop':      1248px,
  'desktop-wide': 1440px
);
@mixin responsive($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == min {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

/**
  Pseudo Elements
  ---------------------------------------------------------------------- */
@mixin pseudo($place, $display: block, $pos: relative, $content: '') {
  &::#{$place} {
    content: $content;
    display: $display;
    position: $pos;
    @content;
  }
}

/**
  Accessibility Hide
  ---------------------------------------------------------------------- */
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

/**
  Enable Hardware Accelleration
  ---------------------------------------------------------------------- */
@mixin hardware($backface: true, $perspective: 1000) {
  @if $backface {
    backface-visibility: hidden;
  }
  perspective: $perspective;
}

/**
  Clean Positioning
  ---------------------------------------------------------------------- */
@mixin position($pos, $t, $r, $b, $l, $z: false, $hardware: true) {
  @if $pos == fixed and $hardware { @include hardware; }
  @if $pos { position: $pos; }
  @if $t { top: $t; }
  @if $r { right: $r; }
  @if $b { bottom: $b; }
  @if $l { left: $l; }
  @if $z { z-index: $z; }
}

/**
  Clearfix
  ---------------------------------------------------------------------- */
@mixin clearfix() {
  *zoom: 1;
  clear: both;

  &::before,
  &::after {
    content: '';
    display: table;
    line-height: 0;
    clear: both;
  }
}

/**
  Create any kind of gradient easily
  ---------------------------------------------------------------------- */
@mixin gradient($type, $orientation, $colors) {
  background-image: #{$type}-gradient($orientation, unquote($colors));
}

/**
  Link Coloring in all States
  ---------------------------------------------------------------------- */
$linkArrayStatic: ['', ':link', ':visited'];
$linkArrayHover: [':hover', ':focus', ':active'];

@mixin linkColor($color: inherit, $state: all, $el: a) {
  @if $state == all {
    @each $state in $linkArrayStatic { #{$el}#{$state} { color: $color; } }
    @each $state in $linkArrayHover { #{$el}#{$state} { color: $color; } }
  }
  @else if $state == static {
    @each $state in $linkArrayStatic { #{$el}#{$state} { color: $color; } }
  }
  @else if $state == hover {
    @each $state in $linkArrayHover { #{$el}#{$state} { color: $color; } }
  }
}

/**
  Truncate Text
  ---------------------------------------------------------------------- */
@mixin truncate($truncation-boundary: 100%) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**
  Strip lists to use semantically, but without the styles
  ---------------------------------------------------------------------- */
@mixin listStripped($display: block, $margin: 0, $padding: 0) {
  list-style-type: none;
  margin: $margin;
  padding: $padding;

  & > li {
    display: $display;
    margin: 0;
    padding: 0;
  }
}

/**
  Easily Style Nav Menus
  ---------------------------------------------------------------------- */
@mixin navMenu($style) {
  @if $style == dropdown {
    ul {
      @include listStripped();

      li {
        position: relative;
        float: left;

        a {
          display: block;
          white-space: nowrap;
        }

        & > ul {
          display: none;
          position: absolute;
          min-width: 100%;
          z-index: 999;

          li {
            display: block;
            float: none;
            position: relative;
          }

          ul {
            left: 100%;
            top: 0;

            li a {
              min-width: 100%;
            }
          }
        }

        &:hover > ul {
          display: block;
        }
      }
    }
  }

  @else if $style == vertical {
    ul {
      @include listStripped();
    }
  }

  @else if $style == horizontal {
    ul {
      @include listStripped(inline-block);
    }
  }
}
